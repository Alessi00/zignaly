name: Beta Release
on:
  push:
    branches:
      - develop
jobs:
  build:
    name: Webapp Beta Release
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Configure deployment folder
        run: |
          sed -i -e 's/{directory}/${{ secrets.TEST_RELEASE_DIR }}/g' appspec.yml
          sed -i -e 's/{directory}/${{ secrets.TEST_RELEASE_DIR }}/g' scripts/configure_app.sh
          sed -i -e 's/{directory}/${{ secrets.TEST_RELEASE_DIR }}/g' scripts/change_permission.sh
          sed -i -e 's/{directory}/${{ secrets.TEST_RELEASE_DIR }}/g' scripts/move_symlink.sh
          sed -i -e 's/{directory}/${{ secrets.TEST_RELEASE_DIR }}/g' scripts/prepare_release.sh
          sed -i -e 's/{directory}/${{ secrets.TEST_RELEASE_DIR }}/g' scripts/delete_old_release.sh
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_TV_KEY }}
      - name: Install submodules
        run: git submodule update --init
      - name: Install Dependencies
        run: npm ci
      - name: Test
        env:
          GATSBY_API_TEST_USER: ${{ secrets.GATSBY_API_TEST_USER }}
          GATSBY_API_TEST_PASS: ${{ secrets.GATSBY_API_TEST_PASS }}
        #run: npm test -- "tradeApiClient"
        run: echo "skipping tests"
      - name: Build
        run: npm run build:test
      - name: Integration Tests
        # temp until we fix the flake errors
        continue-on-error: true
        uses: cypress-io/github-action@v2
        with:
          start: npm run serve
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_baseUrl: http://localhost:9000/app
      - name: Package & Release
        env:
          GITHUB_AUTHOR_NAME: ${{ secrets.GITHUB_AUTHOR_NAME }}
          GITHUB_AUTHOR_EMAIL: ${{ secrets.GITHUB_AUTHOR_EMAIL }}
          GITHUB_COMMITTER_NAME: ${{ secrets.GITHUB_COMMITTER_NAME }}
          GITHUB_COMMITTER_EMAIL: ${{ secrets.GITHUB_COMMITTER_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SEMANTIC_RELEASE_PACKAGE: ${{ secrets.SEMANTIC_RELEASE_PACKAGE }}
          JIRA_AUTH: ${{ secrets.JIRA_AUTH }}
        run: npx semantic-release
      - name: Copy codedeploy config
        run: cp appspec.yml public/appspec.yml && cp -R scripts public/
      - name: AWS CodeDeploy
        uses: sourcetoad/aws-codedeploy-action@v1
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          aws_region: ap-northeast-1
          codedeploy_name: zignaly
          codedeploy_group: zignaly-frontend-prod
          codedeploy_register_only: false
          s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          s3_folder: dev
          max_polling_iterations: 60
          directory: public
